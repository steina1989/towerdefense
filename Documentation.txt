Entities:
Balloon: // walks on PATH
	isDeadNow : bool
	hp/life : int
	reward : int
	speed: int
	render()
	update()

Player
	lives : int
	money : int
	render()
	update()

Tower
	rateOfFire : int
	bullet : Bullet(rateOfFire,damage)
	findNearestBullet()
	price : int

Bullet
	speed : int
	damage : int (sort of like lives, because it shouldnt die before it has inflicted 'damage' number of hits)


Entity Manager
	_balloons: [],
    _bullets: [],
    _towers: [], 
    generateBalloon(descr)
    generateTower(descr)
    findNearestBalloon(posX, posY) - return nearest balloon entity and maybe index
    _forEachOf: function(aCategory, fn)
    deferredSetup: function()
    fireBullet: function(cx, cy, velX, velY, rotation)
    generateBalloon: function(descr)
    generateTower: function(descr)
    update: function(du)
    render: function(ctx)


Arena 
	is a n*n 2d grid.
	It keeps:
		information about the route of the balloons
		information about placement of towers
		information about entry and exit points
	x (pixels)
	y (pixels)
	canvas width, height
	indexToPixels(x,y) -> cx,xy
	pixelsToIndex(cx,cy) -> x,y
	isOccupied(x,y)
	arena.START = -1
	arena.END = -2
	Path = 2,3,4,5,6....

Gameloop
	Generates levels as needed
	Starts and stops a "round"
	Kills the game in case of game over.
	Pressing next round generates harder level

Diagnostics:
	Generate tower
	Generate balloon
	Generate bunch of $$$

Gameplay panel
	Display:
		Lives
		Money
		Current level number
		... 
	


<<<<<<< HEAD


MarkmiÃ°:
=======
>>>>>>> 3be4141aa954bbb3d4e3a4a5c2ae9de63855f6b5

